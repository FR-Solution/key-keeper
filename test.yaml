---
issuers:
  - name: front-proxy-ca
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: front-proxy-client
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kubernetes-ca
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kube-apiserver-server
    vault:
      role:
        name: "kube-apiserver"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kube-apiserver-kubelet-client
    vault:
      role:
        name: "kube-apiserver"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kube-controller-manager-client
    vault:
      role:
        name: "kube-controller-manager-client"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kube-controller-manager-server
    vault:
      role:
        name: "kube-controller-manager-server"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kube-scheduler-server
    vault:
      role:
        name: "kube-scheduler-server"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kube-scheduler-client
    vault:
      role:
        name: "kube-scheduler-client"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: kubelet-client
    vault:
      role:
        name: "kubelet-client"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: etcd-ca
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: etcd-peer
    vault:
      role:
        name: "etcd-peer"
        path: "clusters/cluster-1/pki/etcd"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: etcd-server
    vault:
      role:
        name: "etcd-server"
        path: "clusters/cluster-1/pki/etcd"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

  - name: etcd-client
    vault:
      role:
        name: "etcd-client"
        path: "clusters/cluster-1/pki/etcd"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: $TOKEN
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          roleIDLocalPath:  /tmp/keep/roleIDLocalPath
          secretIDLocalPath:  /tmp/keep/secretIDLocalPath
      timeout: 15s

certificates:
  - name: front-proxy-ca
    issuerRef:
      name: front-proxy-ca
    isCa: true
    ca:
      exportedKey: false
      generate: false
    vault:
      role: ""
      path: "clusters/cluster-1/pki/front-proxy"
      rootCAPath: "clusters/cluster-1/pki/root"
    hostPath: /tmp/keep/certs/front-proxy-ca
    renewBefore: 2160h

  - name: front-proxy-client
    issuerRef:
      name: front-proxy-client
    vault:
      role: "front-proxy-client"
      path: "clusters/cluster-1/pki/front-proxy" 
    spec:
      commonName: front-proxy-client
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100d
    renewBefore: 360h
    hostPath: "/tmp/keep/certs/front-proxy-client"


  - name: kubernetes-ca
    issuerRef:
      name: kubernetes-ca
    isCa: true
    ca:
      exportedKey: false
      generate: false
    vault:
      role: ""
      path: "clusters/cluster-1/pki/kubernetes"
      rootCAPath: "clusters/cluster-1/pki/root"
    hostPath: /tmp/keep/certs/kubernetes-ca
    renewBefore: 2160h

  - name: kube-apiserver-server
    issuerRef:
      name: kube-apiserver-server
    vault:
      role: "kube-apiserver"
      path: "clusters/cluster-1/pki/kubernetes" 
    spec:
      commonName: custom:kube-apiserver-server
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        - "kubernetes"
        - "kubernetes.default"
        - "kubernetes.default.svc"
        - "kubernetes.default.svc.cluster"
        - "kubernetes.default.svc.cluster.local"
        - "api.cluster-1.dobry-kot.ru"
      ipAddresses:
        - 127.0.0.1
      ttl: 100d
    hostPath: "/tmp/keep/certs/kube-apiserver-server"

  - name: kube-apiserver-kubelet-client
    issuerRef:
      name: kube-apiserver-kubelet-client
    vault:
      role: "kube-apiserver-kubelet-client"
      path: "clusters/cluster-1/pki/kubernetes" 
    spec:
      commonName: custom:kube-apiserver-kubelet-client
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      subject:
        organizationalUnits:
          - system:masters
      ttl: 100d
    renewBefore: 360h
    hostPath: "/tmp/keep/certs/kube-apiserver-kubelet-client"

  - name: kube-controller-manager-client
    issuerRef:
      name: kube-controller-manager-client
    vault:
      role: "kube-controller-manager-client"
      path: "clusters/cluster-1/pki/kubernetes" 
    spec:
      commonName: custom:kube-controller-manager-client
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100d
    renewBefore: 360h
    hostPath: "/tmp/keep/certs/kube-controller-manager-client"

  - name: kube-controller-manager-server
    issuerRef:
      name: kube-controller-manager-server
    vault:
      role: "kube-controller-manager-server"
      path: "clusters/cluster-1/pki/kubernetes" 
    spec:
      commonName: custom:kube-controller-manager-server
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        - "kube-controller-manager.default"
        - "kube-controller-manager.default.svc"
        - "kube-controller-manager.default.svc.cluster"
        - "kube-controller-manager.default.svc.cluster.local"
      ipAddresses:
        - "127.0.0.1"
        - "127.0.1.1"
        - "127.0.1.6"
      ttl: 100d
    hostPath: "/tmp/keep/certs/kube-controller-manager-server"

  - name: kube-scheduler-server
    issuerRef:
      name: kube-scheduler-server
    vault:
      role: "kube-scheduler-server"
      path: "clusters/cluster-1/pki/kubernetes" 
    spec:
      commonName: custom:kube-scheduler-server
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        - "kube-scheduler.default"
        - "kube-scheduler.default.svc"
        - "kube-scheduler.default.svc.cluster"
        - "kube-scheduler.default.svc.cluster.local"
      ipAddresses:
        - "127.0.0.1"
        - "127.0.1.1"
        - "127.0.1.6"
      ttl: 100d
    hostPath: "/tmp/keep/certs/kube-scheduler-server"

  - name: kube-scheduler-client
    issuerRef:
      name: kube-scheduler-client
    vault:
      role: "kube-scheduler-client"
      path: "clusters/cluster-1/pki/kubernetes" 
    spec:
      commonName: system:kube-scheduler
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100d
    renewBefore: 360h
    hostPath: "/tmp/keep/certs/kube-scheduler-client"

  - name: kubelet-client
    issuerRef:
      name: kubelet-client
    vault:
      role: "kubelet-client"
      path: "clusters/cluster-1/pki/kubernetes" 
    spec:
      commonName: system:node:${instance_name}
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      subject:
        organizations:
          - system:nodes
      usages:
        - client auth
      ttl: 100d
    renewBefore: 360h
    hostPath: "/tmp/keep/certs/kubelet-client"


  - name: etcd-ca
    issuerRef:
      name: etcd-ca
    isCa: true
    ca:
      exportedKey: false
      generate: false
    vault:
      role: ""
      path: "clusters/cluster-1/pki/etcd"
      rootCAPath: "clusters/cluster-1/pki/root"
    hostPath: /tmp/keep/certs/etcd-ca
    renewBefore: 2160h

  - name: etcd-peer
    issuerRef:
      name: etcd-peer
    vault:
      role: "etcd-peer"
      path: "clusters/cluster-1/pki/etcd" 
    spec:
      commonName: custom:etcd-peer
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
        - client auth
      hostnames:
        - "localhost"
        - "${ instance_name }.${base_domain}"
      ipAddresses:
        - "127.0.0.1"
        - "127.0.1.1"
        - "127.0.1.6"
      ttl: 100d
    hostPath: "/tmp/keep/certs/etcd-peer"

  - name: etcd-server
    issuerRef:
      name: etcd-server
    vault:
      role: "etcd-server"
      path: "clusters/cluster-1/pki/etcd" 
    spec:
      commonName: custom:etcd-server
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        - "${ instance_name }.${base_domain}"
      ipAddresses:
        - "127.0.0.1"
        - "127.0.1.1"
        - "127.0.1.6"
      ttl: 100d
    hostPath: "/tmp/keep/certs/etcd-server"

  - name: etcd-kube-apiserver-client
    issuerRef:
      name: etcd-client
    vault:
      role: "etcd-client"
      path: "clusters/cluster-1/pki/etcd" 
    spec:
      commonName: custom:etcd-kube-apiserver-client
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100d
    renewBefore: 360h
    hostPath: "/tmp/keep/certs/etcd-kube-apiserver-client"

keys:
  - name: kube-sa
    host_path: /tmp/keep/certs/kube-sa
    privateKey:
      algorithm: RSA
      encoding: PKCS1
      size: 2048
    public: true
    vault:
      kv: "clusters/cluster-1/kv"