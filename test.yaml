---
issuers:
  - name: front-proxy-ca
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: ""
        CAPath: "clusters/cluster-1/pki/front-proxy"
        rootCAPath: "clusters/cluster-1/pki/root"
      timeout: 15s

  - name: front-proxy-client
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "front-proxy-client"
        CAPath: "clusters/cluster-1/pki/front-proxy"
      timeout: 15s

  - name: kubernetes-ca
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: ""
        CAPath: "clusters/cluster-1/pki/kubernetes"
        rootCAPath: "clusters/cluster-1/pki/root"
      timeout: 15s

  - name: kube-apiserver-server
    vault:
      role:
        name: "kube-apiserver"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kube-apiserver"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: kube-apiserver-kubelet-client
    vault:
      role:
        name: "kube-apiserver"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kube-apiserver-kubelet-client"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: kube-controller-manager-client
    vault:
      role:
        name: "kube-controller-manager-client"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kube-controller-manager-client"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: kube-controller-manager-server
    vault:
      role:
        name: "kube-controller-manager-server"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kube-controller-manager-server"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: kube-scheduler-server
    vault:
      role:
        name: "kube-scheduler-server"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kube-scheduler-server"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: kube-scheduler-client
    vault:
      role:
        name: "kube-scheduler-client"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kube-scheduler-client"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: kubelet-client
    vault:
      role:
        name: "kubelet-client"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kubelet-client"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: kubelet-server
    vault:
      role:
        name: "kubelet-server"
        path: "clusters/cluster-1/pki/kubernetes"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "kubelet-server"
        CAPath: "clusters/cluster-1/pki/kubernetes"
      timeout: 15s

  - name: tmpd-ca
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: ""
        CAPath: "clusters/cluster-1/pki/tmpd"
        rootCAPath: "clusters/cluster-1/pki/root"
      timeout: 15s

  - name: tmpd-peer
    vault:
      role:
        name: "tmpd-peer"
        path: "clusters/cluster-1/pki/tmpd"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "tmpd-peer"
        CAPath: "clusters/cluster-1/pki/tmpd"
      timeout: 15s

  - name: tmpd-server
    vault:
      role:
        name: "tmpd-server"
        path: "clusters/cluster-1/pki/tmpd"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "tmpd-server"
        CAPath: "clusters/cluster-1/pki/tmpd"
      timeout: 15s

  - name: tmpd-client
    vault:
      role:
        name: "tmpd-client"
        path: "clusters/cluster-1/pki/tmpd"
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      certificate:
        role: "tmpd-client"
        CAPath: "clusters/cluster-1/pki/tmpd"
      timeout: 15s


  - name: test-secret
    vault:
      server: "http://51.250.67.8:9200"
      auth:
        caBundle: ""
        tlsInsecure: true
        bootstrap:
          token: hvs.RzuJmHubW1V8vj7jFAbZtKLJ
        appRole:
          name: "test-role"
          path: "clusters/cluster-1/approle"
          localPath: /tmp/kubernetes/pki/vault/
      kv:
        path: clusters/cluster-1/kv
      timeout: 15s

certificates:
  - name: front-proxy-ca
    issuerRef:
      name: front-proxy-ca
    isCa: true
    ca:
      exportedKey: false
      generate: false
    hostPath: /tmp/kubernetes/pki/ca/

  - name: front-proxy-client
    issuerRef:
      name: front-proxy-client
    spec:
      subject:
        commonName: custom:front-proxy-client
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/kube-apiserver/"

  - name: kubernetes-ca
    issuerRef:
      name: kubernetes-ca
    isCa: true
    ca:
      exportedKey: false
      generate: false
    hostPath: /tmp/kubernetes/pki/ca/

  - name: kube-apiserver-server
    issuerRef:
      name: kube-apiserver-server
    spec:
      subject:
        commonName: custom:kube-apiserver-server
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        - "kubernetes"
        - "kubernetes.default"
        - "kubernetes.default.svc"
        - "kubernetes.default.svc.cluster"
        - "kubernetes.default.svc.cluster.local"
        # - "api.cluster-1.${base_domain}"
      ipAddresses:
        interfaces:
          - eth0
          - lo
        # dnsLookup:
          # - "api.cluster-1.${base_domain}"
      ttl: 100h
    hostPath: "/tmp/kubernetes/pki/certs/kube-apiserver/"

  - name: kube-apiserver-kubelet-client
    issuerRef:
      name: kube-apiserver-kubelet-client
    spec:
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      subject:
        commonName: custom:kube-apiserver-kubelet-client
        organizationalUnits:
          - masters
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/kube-apiserver/"

  - name: kube-controller-manager-client
    issuerRef:
      name: kube-controller-manager-client
    spec:
      subject:
        commonName: system:kube-controller-manager
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/kube-controller-manager/"

  - name: kube-controller-manager-server
    issuerRef:
      name: kube-controller-manager-server
    spec:
      subject:
        commonName: custom:kube-controller-manager
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        - "kube-controller-manager.default"
        - "kube-controller-manager.default.svc"
        - "kube-controller-manager.default.svc.cluster"
        - "kube-controller-manager.default.svc.cluster.local"
      ipAddresses:
        interfaces:
          - lo
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/kube-controller-manager/"

  - name: kube-scheduler-server
    issuerRef:
      name: kube-scheduler-server
    spec:
      subject:
        commonName: custom:kube-scheduler
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        - "kube-scheduler.default"
        - "kube-scheduler.default.svc"
        - "kube-scheduler.default.svc.cluster"
        - "kube-scheduler.default.svc.cluster.local"
      ipAddresses:
        interfaces:
          - lo
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/kube-scheduler/"

  - name: kube-scheduler-client
    issuerRef:
      name: kube-scheduler-client
    spec:
      subject:
        commonName: system:kube-scheduler
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/kube-scheduler/"

  # - name: kubelet-client
  #   issuerRef:
  #     name: kubelet-client
  #   vault:
  #     role: "kubelet-client"
  #     path: "clusters/cluster-1/pki/kubernetes"
  #   spec:
  #     privateKey:
  #       algorithm: RSA
  #       encoding: PKCS1
  #       size: 4096
  #     subject:
  #       commonName: "system:node:${ instance_name }.${base_domain}"
  #       organizations:
  #         - system:nodes
  #     usages:
  #       - client auth
  #     ttl: 100h
  #   renewBefore: 50h
  #   hostPath: "/tmp/kubernetes/pki/certs/kubelet/"

  # - name: kubelet-server
  #   issuerRef:
  #     name: kubelet-server
  #   vault:
  #     role: "kubelet-server"
  #     path: "clusters/cluster-1/pki/kubernetes"
  #   spec:
  #     subject:
  #       commonName: "system:node:${ instance_name }.${base_domain}"
  #       organizations:
  #         - system:nodes
  #     privateKey:
  #       algorithm: RSA
  #       encoding: PKCS1
  #       size: 4096
  #     usages:
  #       - server auth
  #     hostnames:
  #       - "localhost"
  #       # - "${ instance_name }.${base_domain}"
  #     ipAddresses:
  #       interfaces:
  #         - lo
  #         - eth0
  #     ttl: 100h
  #   renewBefore: 50h
  #   hostPath: "/tmp/kubernetes/pki/certs/kubelet/"

  - name: tmpd-ca
    issuerRef:
      name: tmpd-ca
    isCa: true
    ca:
      exportedKey: false
      generate: false
    vault:
      role: ""
      path: "clusters/cluster-1/pki/tmpd"
      rootCAPath: "clusters/cluster-1/pki/root"
    hostPath: /tmp/kubernetes/pki/ca/

  - name: tmpd-peer
    issuerRef:
      name: tmpd-peer
    vault:
      role: "tmpd-peer"
      path: "clusters/cluster-1/pki/tmpd"
    spec:
      subject:
        commonName: custom:tmpd-peer
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
        - client auth
      hostnames:
        - "localhost"
        # - "${ instance_name }.${base_domain}"
      ipAddresses:
        interfaces:
          - eth0
          - lo
        # dnsLookup:
        #   - "${ instance_name }.${base_domain}"
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/tmpd/"

  - name: tmpd-server
    issuerRef:
      name: tmpd-server
    vault:
      role: "tmpd-server"
      path: "clusters/cluster-1/pki/tmpd"
    spec:
      subject:
        commonName: custom:tmpd-server
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - server auth
      hostnames:
        - "localhost"
        # - "${ instance_name }.${base_domain}"
      ipAddresses:
        interfaces:
          - eth0
          - lo
        # dnsLookup:
        #   - "${ instance_name }.${base_domain}"
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/tmpd/"

  - name: kube-apiserver-tmpd-client
    issuerRef:
      name: tmpd-client
    vault:
      role: "tmpd-client"
      path: "clusters/cluster-1/pki/tmpd"
    spec:
      subject:
        commonName: custom:kube-apiserver-tmpd-client
      privateKey:
        algorithm: RSA
        encoding: PKCS1
        size: 4096
      usages:
        - client auth
      ttl: 100h
    renewBefore: 50h
    hostPath: "/tmp/kubernetes/pki/certs/kube-apiserver/"

secrets: 
  - name: sa-key
    issuerRef:
      name: test-secret 
    key: private
    hostPath: /tmp/kubernetes/pki/certs/kube-apiserver/