---
issuers: # Описывает список доступных issuers
  - name: string # Имя issuer
    vault: # Все переменные global.Vault.* могут быть переопределены тут в блоке vault
      server: string # rename $address (адрес волта)
      auth: # блок авторизации в Vault
        caBundle: string # new (сертификат для подключения к волту - при http не должен фигурировать)
        tlsInsecure: bool # new при указании тру скипать ssl верификацию
        bootstrap: # блок авторизации в Vault по бутстрап токену
          tokenPath: string # rename $bootstrap_token
        appRole: # блок авторизации в Vault по аппроли
          name: string # rename $approle_name
          path: string # rename $approle_path
          roleIDLocalPath: string # rename $local_path_to_role_id
          secretIDLocalPath: string # rename $local_path_to_secret_id
      timeout: string # строка формата "1s", таймаут для любого обращения к issuer

certificates: # Описывает список доступных certificates
  - name: string # Имя certificate
    issuerRef: # IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
      name: string # Имя вызываемого ISSUER
    isCa: bool # IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
    ca: # Альтернатива блоку certificates.intermediate_ca
      exportedKey: bool # запрашивать приватный ключ или нет
      generate: bool # генерить ЦА или запросить существующий CA
    spec: # блок описывающий certificate
      subject: # блок описывающий принадлежность certificate
        commonName: string # CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
        country: list of string # Countries to be used on the Certificate.
        localite: list of string # Cities to be used on the Certificate.
        organization: list of string # Organizations to be used on the Certificate.
        organizationalUnit: list of string # Organizational Units to be used on the Certificate.
        province: list of string # State/Provinces to be used on the Certificate.
        postalCode: list of string # Postal codes to be used on the Certificate.
        streetAddress: list of string # Street addresses to be used on the Certificate.
        serialNumber: string # Serial number to be used on the Certificate
      privateKey: # Options to control private keys used for the Certificate.
        algorithm: string # Algorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified and `size` is not provided, key size of 256 will be used for `ECDSA` key algorithm and key size of 2048 will be used for `RSA` key algorithm. key size is ignored when using the `Ed25519` key algorithm.
        encoding: string # The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
        size: integer # Size is the key bit size of the corresponding private key for this certificate. If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. If `algorithm` is set to `Ed25519`, Size is ignored. No other values are allowed.
      hostnames: list of string # List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
      ipAddresses: 
        static: list of string
        interfaces: list of string
        dnsLookup: list of string
      ttl: string # на какой промежуток времени заказывается сертификат
    vault:
      role: string # альтернатива блоку csr[*].role
      path: string # Путь к сейфу Inermediate CA где будет заказан сертификат
      rootCAPath: string # Путь к root CA
    hostPath: string # путь, где будет размещен секрет по маске ${hostPathCert}/${certName}
    renewBefore: string # за сколько до истечения надо перевыпустить
    trigger: list of string # список bash команд которые применятся после обновления сертификата

keys: # Описывает список доступных keys
  - name: # Имя key
    issuerRef: # IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
      name: string # Имя вызываемого ISSUER
    hostPath: string # путь, где будет размещен секрет по маске ${hostPathCert}/${keyName}
