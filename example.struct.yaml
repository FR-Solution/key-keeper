---
global:                                 # блок описывает базовую конфигурацию key-keeper
  vault:                                # блок описывает базовый конфиг Vault
    serever: string                     # rename $address (адрес волта)
    caBundle: string                    # new (сертификат для подключения к волту - при http не должен фигурировать)
    tlsInsecure: bool                   # new при указании тру скипать ssl верификацию
    auth:                               # блок авторизации в Vault
      bootstrap:                        # блок авторизации в Vault по бутстрап токену
        tokenPath: string               # rename $bootstrap_token
      appRole:                          # блок авторизации в Vault по аппроли
        name: string                    # rename $approle_name
        path: string                    # rename $approle_path
        roleIdPath: string              # rename $local_path_to_role_id
        secretIdPath: string            # rename $local_path_to_secret_id
    kv:                                 # блок описывает базовый KV
      path: string                      # блок описывает базовый путь KV

issuers:                                # Описывает список доступных issuers
  - name: string                        # Имя issuer
    vault:                              # Все переменные global.Vault.* могут быть переопределены тут в блоке vault
      role:                             # Блок описывающий роль волта
        name: string                    # альтернатива блоку csr[*].role
        path: string                    # альтернатива блоку csr[*].cert_path
        intermediate:                   # Альтернатива блоку certificates.intermediate_ca
          rootPath: string              # Путь к root CA
          exportedKey: bool             # запрашивать приватный ключ или нет
          generate: bool                # генерить ЦА или запросить существующий CA
      serever: string                   # rename $address (адрес волта)
      caBundle: string                  # new (сертификат для подключения к волту - при http не должен фигурировать)
      tlsInsecure: bool                 # new при указании тру скипать ssl верификацию
      auth:                             # блок авторизации в Vault
        bootstrap:                      # блок авторизации в Vault по бутстрап токену
          tokenPath: string             # rename $bootstrap_token
        appRole:                        # блок авторизации в Vault по аппроли
          name: string                  # rename $approle_name
          path: string                  # rename $approle_path
          roleIdPath: string            # rename $local_path_to_role_id
          secretIdPath: string          # rename $local_path_to_secret_id

certificates:                           # Описывает список доступных certificates
  - name: string                        # Имя certificate
    spec:                               # блок описывающий certificate
      duration: string                  # на какой промежуток времени заказывается сертификат
      renewBefore: string               # за сколько до истечения надо перевыпустить
      subject:                          # блок описывающий принадлежность certificate
        countries: string               # Countries to be used on the Certificate.
        localities: string              # Cities to be used on the Certificate.
        organizationalUnits: string     # Organizational Units to be used on the Certificate.
        organizations: string           # Organizations to be used on the Certificate.
        postalCodes: string             # Postal codes to be used on the Certificate.
        provinces: string               # State/Provinces to be used on the Certificate.
        serialNumber: string            # Serial number to be used on the Certificate
        streetAddresses: string         # Street addresses to be used on the Certificate.
      commonName: string                # CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.
      privateKey:                       # Options to control private keys used for the Certificate.
        algorithm: string               # Algorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified and `size` is not provided, key size of 256 will be used for `ECDSA` key algorithm and key size of 2048 will be used for `RSA` key algorithm. key size is ignored when using the `Ed25519` key algorithm.
        encoding: string                # The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
        size: intager                   # Size is the key bit size of the corresponding private key for this certificate. If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. If `algorithm` is set to `Ed25519`, Size is ignored. No other values are allowed.
      usages: list of strings           # Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.
      dnsNames: list of strings         # List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.
      ipAddresses: list of strings      # IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.
      issuerRef:                        # IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.
        name: string                    # Имя вызываемого ISSUER
      isCa: bool                        # IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
    hostPathCert: string                # путь, где будет размещен секрет по маске ${hostPathCert}/${certName}
    trigger: list of strings            # список bash команд которые применятся после обновления сертификата

keys:                                   # Описывает список доступных keys
  - name:                               # Имя key
    host_path: string                   # путь, где будет размещен секрет по маске ${hostPathCert}/${keyName}
    privateKey:                         # Options to control private keys used for the Certificate.
      algorithm: string                 # Algorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `RSA`,`Ed25519` or `ECDSA` If `algorithm` is specified and `size` is not provided, key size of 256 will be used for `ECDSA` key algorithm and key size of 2048 will be used for `RSA` key algorithm. key size is ignored when using the `Ed25519` key algorithm.
      encoding: string                  # The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.
      size: intager                     # Size is the key bit size of the corresponding private key for this certificate. If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. If `algorithm` is set to `Ed25519`, Size is ignored. No other values are allowed.
    public: true                        # если false генерил локально, true генерил локально и пушил в vault
    vault:                              # блок описывает базовый конфиг Vault
      kv:                               # блок описывает базовый KV
        path: string                    # блок описывает базовый путь KV               
